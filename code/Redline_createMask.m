function [BW,croppedRGBImage] = Redline_createMask(RGB)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,croppedRGBImage] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, the riginal image is cropped based on the 
%  location of the largest connected component's mean of top 100 row values in the mask and returned in croppedRGBImage.
% Auto-generated by colorThresholder app on 15-Dec-2023
%------------------------------------------------------


% Convert RGB image to chosen color space
I = rgb2lab(RGB);

% Define thresholds for channel 1 based on histogram settings
channel1Min = 0.647;
channel1Max = 98.155;

% Define thresholds for channel 2 based on histogram settings
channel2Min = -13.251;
channel2Max = 47.436;

% Define thresholds for channel 3 based on histogram settings
channel3Min = -13.336;
channel3Max = 64.540;

% Create mask based on chosen histogram thresholds
sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
BW = sliderBW;

BW = ~BW;
% Find connected components in the binary mask
cc = bwconncomp(BW);

% Get the properties of each connected component
regionprops(cc, 'PixelIdxList', 'BoundingBox');

% Find the largest connected component
numPixels = cellfun(@numel, cc.PixelIdxList);
[~, idx] = max(numPixels);

% Get the row and column values of the largest connected component
[r, c] = ind2sub(size(BW), cc.PixelIdxList{idx});

% Sort the r values in descending order
sorted_r = sort(r, 'descend');

% Get the top 100 r values
top100_r = sorted_r(1:100);

% Calculate the mean of the top 100 r values and convert to integer
mean_r = round(mean(top100_r))+100;

% Crop the original RGB image using the mean value
croppedRGBImage = RGB(mean_r:end, :, :);

end
